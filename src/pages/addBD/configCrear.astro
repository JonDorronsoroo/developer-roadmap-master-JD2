---
import SimplePageHeader from "../../components/SimplePageHeader.astro";
import {getCategoriaPrimerNivelGENERAL, getCategoriaSegundoNivelGENERAL,getCategoriaTercerNivelGENERAL } from "../../database/consultas";
import BaseLayout from "../../layouts/BaseLayout.astro";
import { insertNuevoRoadmap } from "../../database/consultas";
import { insertRelacionRoadmapCategoria } from "../../database/consultas";
import '../../styles/formulario.css'


const categoriasNivel1 = await getCategoriaPrimerNivelGENERAL();

const categoriasNivel2 = await getCategoriaSegundoNivelGENERAL();

const categoriasNivel3 = await getCategoriaTercerNivelGENERAL();

if (Astro.request.method === 'POST') {
    try{
        const data = await Astro.request.formData();
        const titulo = data.get('titulo')?.toString();
        const prioridad = data.get('prioridad')?.toString();
        const descripcion = data.get('descripcion')?.toString();
        const checkboxes = categoriasNivel1?.filter(categoria => data.has(categoria.idNombre))
            .map(categoria => ({ idNombre: categoria.idNombre,
                prioridad: data.get(`prioridad-${categoria.idNombre}`)?.toString()}));
        const id= titulo;
        if(id && titulo  && descripcion ){
            console.log('Datos completos')
            const resultId= await insertNuevoRoadmap(id, titulo, descripcion);
            console.log(resultId)

            if(resultId==0){
                console.log(resultId)
                console.log('Roadmap creado con exito')
                console.log(checkboxes)

                checkboxes?.map((categoria)=>{
                    if(categoria.prioridad==null){
                       insertRelacionRoadmapCategoria(id, categoria.idNombre)
                    }else{
                    insertRelacionRoadmapCategoria(id, categoria.idNombre, parseInt(categoria.prioridad))
                    }
                }
            )
                return Astro.redirect('/')               // Ahora creamos las relaciones entre las categorias y el roadmap
            }
            return Astro.redirect('/404')

        }
        console.log('Faltan datos, error crear aglo visual que señalice el error al usuario')

      }catch(e){
        console.log(e)
    }
}
---

<BaseLayout title='About roadmap.sh' permalink={'/addBD/configCrear'}>
    <SimplePageHeader
    title='Developer Roadmaps'
    description='Añade todo a la base de datos'
  />

  <form id="roadmapForm" class="form-container" autocomplete="off">

    <fieldset>
    <label>Titulo:</label>
    <input type="text" name="titulo" required />

    <label>Descripción:</label>
    <textarea name="descripcion" rows="4" cols="60" required></textarea>
    </fieldset>

    <fieldset>
        <label for="categorias">Escoge las categorías del 1º nivel que desees incluir:</label>
            
            <input type="text" id="input-box" placeholder="Buscar primer nivel" autocomplete="off">

            <div id="custom-dropdown" class="custom-dropdown">
                <ul id="dropdown-options" class="dropdown-options">
                    {categoriasNivel1?.map((categoria) => (
                        <li value={categoria.idNombre}>{categoria.idNombre}</li>
                    ))}
                </ul>
            </div>

            <div id="checkboxList" class="checkbox-list"></div>

    </fieldset>


    <fieldset>
        <label for="categorias">Escoge las categorías del 2º nivel que desees incluir:</label>
            
            <input type="text" id="input-boxSegundo" placeholder="Buscar segundo nivel" autocomplete="off">

            <div id="custom-dropdownSegundo" class="custom-dropdown">
                <ul id="dropdown-optionsSegundo" class="dropdown-options">
                    {categoriasNivel2?.map((categoria) => (
                        <li value={categoria.idNombre}>{categoria.idNombre}</li>
                    ))}
                </ul>
            </div>

            <div id="checkboxListSegundo" class="checkbox-list"></div>

    </fieldset>

    <fieldset>
        <label for="categorias">Escoge las categorías del 3º nivel que desees incluir:</label>
            
            <input type="text" id="input-boxTercero" placeholder="Buscar tercero nivel" autocomplete="off">

            <div id="custom-dropdownTercero" class="custom-dropdown">
                <ul id="dropdown-optionsTercero" class="dropdown-options">
                    {categoriasNivel3?.map((categoria) => (
                        <li value={categoria.idNombre}>{categoria.idNombre}</li>
                    ))}
                </ul>
            </div>

            <div id="checkboxListTercero" class="checkbox-list"></div>

    </fieldset>


    <div class="button-container">
        <button type="submit">Crear y Guardar</button>
    </div>

    <div id="correct-message" class="message success"></div>
    <div id="error-message" class="message error"></div>

    </form>

<script>

import { setupFormSubmission } from '../../utils.js';
import { setupDropdown } from './configRoadmap';

setupFormSubmission('roadmapForm', '/api/addRoadmap');
setupDropdown('input-box', 'custom-dropdown', 'checkboxList');
setupDropdown('input-boxSegundo', 'custom-dropdownSegundo', 'checkboxListSegundo');
setupDropdown('input-boxTercero', 'custom-dropdownTercero', 'checkboxListTercero');


</script>

</BaseLayout>
