---
import OrganigramaHeader from '../../../components/OrganigramaHeader.astro';
import FrameRenderer from '../../../components/FrameRenderer/FrameRenderer.astro';
import MarkdownFile from '../../../components/MarkdownFile.astro';
import ShareIcons from '../../../components/ShareIcons/ShareIcons.astro';
import { TopicDetail } from '../../../components/TopicDetail/TopicDetail';
import UpcomingForm from '../../../components/UpcomingForm.astro';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import {
type OrganigramaFrontmatter,
getOrganigramaIds,
} from '../../../lib/organigrama';

export async function getStaticPaths() {
  const organigramaIds = await getOrganigramaIds();

  return organigramaIds.map((organigramaId) => ({
    params: { organigramaId },
  }));
}

interface Params extends Record<string, string | undefined> {
  organigramaId: string;
}

const { organigramaId } = Astro.params as Params;
const organigramaFile = await import(
  `../../../data/organigrama/${organigramaId}/${organigramaId}.md`
);
const organigramaData =
  organigramaFile.frontmatter as OrganigramaFrontmatter;


---

<BaseLayout
  permalink={`/organigrama/${organigramaId}`}
  title={organigramaData?.seo?.title}
  briefTitle={organigramaData?.briefTitle}
  description={organigramaData.seo.description}
  keywords={organigramaData.seo.keywords}
  noIndex={organigramaData.isUpcoming}
>
  <!-- Preload the font being used in the renderer -->
  <link
    rel='preload'
    href='/fonts/balsamiq.woff2'
    as='font'
    type='font/woff2'
    crossorigin
    slot='after-header'
  />

  <OrganigramaHeader
    title={organigramaData.title}
    description={organigramaData.description}
    organigramaId={organigramaId}
    isUpcoming={organigramaData.isUpcoming}
  />

  <div class='bg-gray-50 py-4 sm:py-12'>
    {
      !organigramaData.isUpcoming && organigramaData.jsonUrl && (
        <div class='container relative max-w-[1000px]'>
          <ShareIcons
            description={organigramaData.briefDescription}
            pageUrl={`https://roadmap.sh/best-practices/${organigramaId}`}
          />

          <TopicDetail client:idle />

          <FrameRenderer
            resourceType={'organigrama'}
            resourceId={organigramaId}
            jsonUrl={organigramaData.jsonUrl}
            dimensions={organigramaData.dimensions}
          />
        </div>
      )
    }

    {
      !organigramaData.isUpcoming && !organigramaData.jsonUrl && (
        <MarkdownFile>
          <organigramaFile.Content />
        </MarkdownFile>
      )
    }
  </div>

  {organigramaData.isUpcoming && <UpcomingForm />}
</BaseLayout>
